<Window x:Class="AutoCalibrationTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        mc:Ignorable="d" Icon="/Assets/logo.png" WindowStartupLocation="CenterScreen"
        Title="自动标定工具" Height="600" Width="800" Closing="OnAppExiting">
    <Grid Background="#f0f0f0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal" Margin="4" Grid.ColumnSpan="2" >
            <StackPanel Orientation="Horizontal" DataContext="{Binding Source={StaticResource Locator}, Path=Port}">
                <Label>串口:</Label>
                <ComboBox Width="100" ItemsSource="{Binding SerialPortNames}"
                          SelectedItem="{Binding PortName}" IsEnabled="{Binding IsClosed}"/>
                <Button Margin="4,0,0,0" Width="50" Command="{Binding OpenOrClosePortCommand}" IsEnabled="{Binding PortButtonEnabled}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsOpen}" Value="True">
                                    <Setter Property="Content" Value="关闭"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsOpen}" Value="False">
                                    <Setter Property="Content" Value="打开"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" DataContext="{Binding Source={StaticResource Locator}, Path=Storage}">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="4,0,0,0"/>
                    </Style>
                </StackPanel.Resources>
                <Label Margin="4,0,0,0">存储位置:</Label>
                <TextBox Width="150" Margin="4,0,0,0" VerticalContentAlignment="Center" ToolTipService.IsEnabled ="True" ToolTipService.ShowOnDisabled="True" IsEnabled="False" Text="{Binding StorageLocation}">
                    <TextBox.ToolTip>
                        <ToolTip Content="{Binding StorageLocation}">
                            <ToolTip.Style>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToolTip.Style>
                        </ToolTip>
                    </TextBox.ToolTip>
                </TextBox>
                <Button Width="30" Click="OnDirectoryPickerClick">...</Button>
                <Button Width="80" Click="OnExport" IsEnabled="{Binding ExportButtonEnabled}">导出数据</Button>
                <Button Width="80" Click="OnReset" IsEnabled="{Binding ResetButtonEnabled}">重置存储区</Button>
                <Button Width="80" Click="OnReadTestFile" Visibility="{Binding TestButtonVisible}">读取测试文件</Button>
                <Button Width="80" Click="OnTestExport" Visibility="{Binding TestButtonVisible}">测试导出</Button>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Row="1" Margin="4" DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="100"/>
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Margin" Value="4"/>
                    </Style>
                </StackPanel.Resources>
                <Button Command="{Binding IncubeStartCommand}" IsEnabled="{Binding CommandButtonEnabled}">恒温标定开始</Button>
                <Button Command="{Binding IncubeStopCommand}" IsEnabled="{Binding IncubeStopButtonEnabled}">恒温标定结束</Button>
                <Button Command="{Binding RoomStartCommand}" IsEnabled="{Binding CommandButtonEnabled}">室温标定开始</Button>
                <Button Command="{Binding RoomStopCommand}" IsEnabled="{Binding RoomStopButtonEnabled}">室温标定结束</Button>
                <Button Command="{Binding TestLeakageOnCommand}" IsEnabled="{Binding CommandButtonEnabled}">漏气检测开始</Button>
                <Button Command="{Binding TestLeakageOffCommand}" IsEnabled="{Binding TestLeakageOffButtonEnabled}">漏气检测结束</Button>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Vertical">
                <StackPanel Margin="4,0,4,0" Orientation="Horizontal">
                    <Label>设备数:</Label>
                    <Label Content="{Binding DeviceDataCount}"/>
                </StackPanel>
                <StackPanel Margin="4,0,4,0" Orientation="Horizontal">
                    <Label>流量数:</Label>
                    <Label Content="{Binding FlowDataCount}"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1" Margin="4"
              DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBox Name="StatusTextBox" TextWrapping="Wrap" InputMethod.IsInputMethodEnabled="False" 
                     KeyDown="OnStatsusTextBoxKeyDown" IsUndoEnabled="False" UndoLimit="0">
                <TextBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="ApplicationCommands.Copy"/>
                        <MenuItem Command="ApplicationCommands.Paste"/>
                        <MenuItem Header="清空" Click="ClearStatusTextBox"/>
                    </ContextMenu>
                </TextBox.ContextMenu>
            </TextBox>
            <ComboBox Grid.Row="1" Margin="0,4,0,4" ItemsSource="{Binding HistoryCommands}" SelectedItem="{Binding SelectedCommand}"/>
            <Grid Grid.Row="2" Height="50">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="29*"/>
                    <ColumnDefinition Width="279*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Margin="0,4,0,-1" Text="{Binding Command}" Grid.ColumnSpan="2"/>
                <Button Grid.Column="2" Margin="4,4,0.286,0" Width="50"
                        IsEnabled="{Binding SendButtonEnabled}"
                        Command="{Binding SendCommand}"
                        KeyDown="OnSendButtonKeyDown">发送</Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
